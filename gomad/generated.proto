syntax = "proto3";
package gomad;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "gomad";

message IngredientSelection {
	option (gogoproto.typedecl) = false;
	gomad.Ingredient ingredient = 1;
	int32 portions = 2;
}

message Pizza {
	option (gogoproto.typedecl) = false;
	int32 id = 1 [(gogoproto.customname) = "ID"];
	repeated gomad.IngredientSelection ingredients = 2;
}

message AddIngredientRequest {
	gomad.Pizza arg1 = 1;
	gomad.Ingredient arg2 = 2;
	int32 arg3 = 3;
}

message NutritionalReportResponse {
	string result1 = 1;
}

message RemoveIngredientRequest {
	gomad.Pizza arg1 = 1;
	gomad.Ingredient arg2 = 2;
	int32 arg3 = 3;
}

enum Ingredient {
	option (gogoproto.enumdecl) = false;
	option (gogoproto.goproto_enum_prefix) = false;
	PEPPERONI = 0 [(gogoproto.enumvalue_customname) = "Pepperoni"];
	PINEAPPLE = 1 [(gogoproto.enumvalue_customname) = "Pineapple"];
	HAM = 2 [(gogoproto.enumvalue_customname) = "Ham"];
	BACON = 3 [(gogoproto.enumvalue_customname) = "Bacon"];
	CHICKEN = 4 [(gogoproto.enumvalue_customname) = "Chicken"];
	LAMB = 5 [(gogoproto.enumvalue_customname) = "Lamb"];
	NO_FOOD = 6 [(gogoproto.enumvalue_customname) = "NoFood"];
}

service GomadService {
	rpc AddIngredient (gomad.AddIngredientRequest) returns (gomad.Pizza);
	rpc NutritionalReport (gomad.Pizza) returns (gomad.NutritionalReportResponse);
	rpc RemoveIngredient (gomad.RemoveIngredientRequest) returns (gomad.Pizza);
}

